stages:
  - version
  - build
  - deploy

variables:
  GITHUB_DOMAIN: github.com
  GITHUB_NAMESPACE: kevin-doering
  GITLAB_DOMAIN: gitlab.com
  RAMPIKE_DOMAIN: rampike.de
  WORKDIR_NAMESPACE: rampike
  WORKSPACE_REPOSITORY: "git@${GITLAB_DOMAIN}:${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git"
  MANIFEST_REPOSITORY: "git@${GITHUB_DOMAIN}:${GITHUB_NAMESPACE}/${APP_NAME}.git"

version:
  image: python:3.7-stretch
  stage: version
  only:
    - main
  before_script:
    # configure ssh connection with gitlab.com
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - which ssh-agent || ( apk --update add openssh-client )
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H ${GITLAB_DOMAIN} >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - pip install semver
    - python3 ./.release/gen-semver.py > version
  artifacts:
    expire_in: 1 day
    paths:
      - version

build_api:
  image: docker
  stage: build
  services:
    - docker:dind
  only:
    - master
  except:
    - tags
  before_script:
    # configure ssh connection with rampike.de
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - which ssh-agent || ( apk --update add openssh-client )
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -p 8787 -H ${RAMPIKE_DOMAIN} >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # prepare build environment
    - apk add --no-cache gettext
    - export APP_NAME=rpk-api
    - export ARCH_TARGET=api-aarch64
    - export VERSION=$(cat ./version)
    - export CONTAINER_PORT=3000
    - mkdir -p ./release
    - envsubst < ./.release/example.env > ./release/.env
    - mv ./.release/build.sh ./release
    - chmod +x ./release/build.sh
    - mv ./.release/app.sh ./release
    - chmod +x ./release/app.sh
  script:
    - scp -P 8787 -r ./release ${SERVER_USER}@${RAMPIKE_DOMAIN}:/home/${SERVER_USER}
    - ssh -p 8787 ${SERVER_USER}@${RAMPIKE_DOMAIN} "bash ~/release/build.sh; bash ~/release/app.sh; rm -r ~/release"

build_client:
  image: docker
  stage: build
  services:
    - docker:dind
  only:
    - main
  except:
    - tags
  before_script:
    # configure ssh connection with rampike.de
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - which ssh-agent || ( apk --update add openssh-client )
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -p 8787 -H ${RAMPIKE_DOMAIN} >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # prepare build environment
    - apk add --no-cache gettext
    - export APP_NAME=rpk-client
    - export ARCH_TARGET=ssr-aarch64
    - export VERSION=$(cat ./version)
    - export CONTAINER_PORT=4000
    - mkdir -p ./release
    - envsubst < ./.release/example.env > ./release/.env
    - mv ./.release/build.sh ./release
    - chmod +x ./release/build.sh
    - mv ./.release/app.sh ./release
    - chmod +x ./release/app.sh
  script:
    - scp -P 8787 -r ./release ${SERVER_USER}@${RAMPIKE_DOMAIN}:/home/${SERVER_USER}
    - ssh -p 8787 ${SERVER_USER}@${RAMPIKE_DOMAIN} "bash ~/release/build.sh; bash ~/release/app.sh; rm -r ~/release"
